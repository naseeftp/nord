<%- include("../../views/partials/user/header") %>
<style>
/* Base Layout Styling */
body {
  background-color: #f9f9f9;
  color: #333;
  font-family: 'Arial', sans-serif;
}

/* Card Styling */
.card-green {
  background-color: #f5f5f5;
}

.main {
  padding: 30px 0;
}

.dashboard-menu {
  background-color: #f0f0f0;
  border-radius: 10px;
  padding: 15px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
}

.dashboard-menu .nav-link {
  font-weight: bold;
  color: #333;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  transition: box-shadow 0.3s ease;
}

.dashboard-menu .nav-link:hover {
  color: #000;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
}

.card {
  border-radius: 10px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
  margin-bottom: 20px;
  background-color: #fff;
}

.card-header {
  background-color: #222;
  color: white;
  border-radius: 10px 10px 0 0;
}

.btn-success {
  background-color: #333;
  border-color: #222;
  color: #fff;
}

.btn-success:hover {
  background-color: #000;
}

.form-group {
  margin-bottom: 15px;
}

.required {
  color: #444;
}

@media (max-width: 768px) {
  .dashboard-menu {
    padding: 10px;
  }

  .card {
    margin-bottom: 15px;
  }
}

/* Breadcrumb Styling */
.page-header.breadcrumb-wrap {
  background-color: #f0f0f0;
  padding: 15px 0;
}

.breadcrumb {
  display: flex;
  align-items: center;
  font-family: 'Arial', sans-serif;
  font-size: 16px;
  color: #333;
}

.breadcrumb a {
  color: #444;
  text-decoration: none;
  position: relative;
  margin: 0 5px;
}

.breadcrumb a:hover {
  color: #000;
}

.breadcrumb span {
  margin: 0 5px;
  color: #777;
}

.breadcrumb a::after {
  content: '';
  position: absolute;
  width: 100%;
  height: 2px;
  background: #333;
  left: 0;
  bottom: -2px;
  transform: scaleX(0);
  transition: transform 0.3s ease;
}

.breadcrumb a:hover::after {
  transform: scaleX(1);
}

/* Wallet Styling */
.wallet-container {
  max-width: 1024px;
  margin: 0 auto;
  background-color: #fff;
  padding: 30px;
  border-radius: 10px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  font-family: 'Arial', sans-serif;
}

.wallet-title {
  font-size: 2rem;
  font-weight: bold;
  color: #222;
  margin-bottom: 25px;
  padding-bottom: 15px;
  border-bottom: 1px solid #ddd;
  text-align: center;
}

.balance-section {
  margin-bottom: 30px;
}

.balance-card {
  background: linear-gradient(to right, #e6e6e6, #fff);
  padding: 40px;
  border-radius: 10px;
  text-align: center;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  border: 1px solid #ddd;
}

.balance-card .amount {
  font-size: 2.5rem;
  font-weight: bold;
  color: #222;
  margin-bottom: 10px;
}

.balance-card .label {
  font-size: 1.2rem;
  color: #555;
}

.action-buttons {
  display: flex;
  justify-content: center;
  gap: 20px;
  margin-bottom: 40px;
}

.action-button {
  display: inline-block;
  padding: 12px 30px;
  background-color: #333;
  color: #fff;
  text-decoration: none;
  border-radius: 5px;
  transition: all 0.3s ease;
  font-size: 1rem;
  border: 1px solid #222;
  cursor: pointer;
}

.action-button:hover {
  background-color: #000;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

.transaction-history {
  margin-top: 40px;
}

.transaction-title {
  font-size: 1.5rem;
  color: #222;
  margin-bottom: 20px;
  padding-bottom: 10px;
  border-bottom: 1px solid #ddd;
}

.transaction-table {
  width: 100%;
  border-collapse: collapse;
}

.transaction-table th {
  background-color: #333;
  padding: 15px;
  text-align: left;
  font-weight: normal;
  color: #fff;
  border-bottom: 1px solid #ddd;
}

.transaction-table td {
  padding: 15px;
  border-bottom: 1px solid #eee;
  color: #333;
}

.transaction-table tr:hover {
  background-color: #f5f5f5;
}

/* Status styling */
.status-credit {
  background-color: #e6e6e6;
  color: #222;
  padding: 5px 10px;
  border-radius: 3px;
  font-size: 0.9rem;
  border: 1px solid #ccc;
}

.status-debit {
  background-color: #f0f0f0;
  color: #444;
  padding: 5px 10px;
  border-radius: 3px;
  font-size: 0.9rem;
  border: 1px solid #ddd;
}

.empty-transactions {
  text-align: center;
  padding: 30px;
  color: #777;
  font-style: italic;
}

/* Modal styles */
.modal-content {
  border-radius: 10px;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  background-color: #fff;
}

.modal-header {
  background-color: #222;
  color: #fff;
  border-bottom: 1px solid #333;
  padding: 15px 20px;
  border-radius: 10px 10px 0 0;
}

.modal-title {
  font-family: 'Arial', sans-serif;
  font-size: 1.5rem;
  color: #fff;
}

.modal-body {
  padding: 20px;
}

.modal-footer {
  border-top: 1px solid #eee;
  padding: 15px 20px;
  border-radius: 0 0 10px 10px;
}

.quick-amount {
  display: inline-block;
  padding: 10px 20px;
  margin: 5px;
  border: 1px solid #ccc;
  background-color: #f5f5f5;
  border-radius: 5px;
  cursor: pointer;
  transition: all 0.3s ease;
  color: #333;
}

.quick-amount:hover {
  background-color: #e0e0e0;
  border-color: #aaa;
}

.btn-primary {
  background-color: #333;
  border: none;
  padding: 10px 20px;
  color: #fff;
}

.btn-primary:hover {
  background-color: #000;
}

.btn-secondary {
  background-color: #ddd;
  color: #333;
  border: none;
  padding: 10px 20px;
}

.btn-secondary:hover {
  background-color: #ccc;
  color: #000;
}


.table {
  width: 100%;
  margin-bottom: 1rem;
  color: #333;
}

.table thead th {
  background-color: #333;
  color: white;
  border-bottom: 2px solid #444;
}

.table tbody tr:nth-of-type(odd) {
  background-color: #f8f8f8;
}

.table tbody tr:hover {
  background-color: #f0f0f0;
}


.btn-sm {
  padding: 0.25rem 0.5rem;
}

.btn-sm.btn-success {
  margin: 0 0.25rem;
}


#payButton, #withdrawButton {
  background-color: #333;
  color: white;
}

#payButton:hover, #withdrawButton:hover {
  background-color: #000;
}


</style>


<main class="main">
 <div class="page-header breadcrumb-wrap mb-3">
   <div class="container">
     <div class="breadcrumb">
       <a href="/" rel="nofollow">Home</a>
       <span></span> <a href="/userProfile">Profile </a><span></span> Account
     </div>
   </div>
 </div>
  <section class="pt-10 pb-10">
   <div class="container">
     <div class="row">
       <div class="col-lg-10 m-auto">
         <div class="row">
           <div class="col-md-4">
             <div class="dashboard-menu">
               <ul class="nav flex-column" role="tablist">
                 <li class="nav-item">
                   <a class="nav-link active" id="dashboard-tab" data-bs-toggle="tab" href="#dashboard" role="tab" aria-controls="dashboard" aria-selected="false">
                     <i class="fi-rs-settings-sliders mr-10"></i>Dashboard
                   </a>
                 </li>
                 <li class="nav-item">
                   <a class="nav-link" id="address-tab" data-bs-toggle="tab" href="#address" role="tab" aria-controls="address" aria-selected="true">
                     <i class="fi-rs-marker mr-10"></i>My Address
                   </a>
                 </li>
                 <li class="nav-item">
                   <a class="nav-link" id="orders-tab" data-bs-toggle="tab" href="#orders" role="tab" aria-controls="orders" aria-selected="false">
                     <i class="fi-rs-shopping-bag mr-10"></i>Orders
                   </a>
                 </li>
                 <li class="nav-item">
                   <a class="nav-link" id="track-orders-tab" data-bs-toggle="tab" href="#track-orders" role="tab" aria-controls="track-orders" aria-selected="false">
                     <i class="fi-rs-shopping-cart-check mr-10"></i>Wallet Status
                   </a>
                 </li>
              
                
                 <li class="nav-item">
                   <a class="nav-link" href="/logout">
                     <i class="fi-rs-sign-out mr-10"></i>Logout
                   </a>
                 </li>
               </ul>
             </div>
           </div>
           <div class="col-md-8">
             <div class="tab-content dashboard-content">


               <div class="tab-pane fade show active" id="dashboard" role="tabpanel" aria-labelledby="dashboard-tab">
                 <div class="card card-green">
                   <div class="card-header">
                     <h5 class="mb-0 text-center" style="color: white;">User Profile</h5>
                   </div>
                   <div class="card-body text-center">
                     <h5 class="card-title"><%=user.name%></h5>
                     <p class="card-text">
                       <strong>Phone:</strong><%=user.phone%>
                     </p>
                     <p class="card-text">
                       <strong>Email:</strong><%=user.email%>
                     </p>
                     <p class="card-text">
                      <strong>referalcode:</strong><%=user.referralCode%>
                    </p>
                     <a href="/change-email" class="btn btn-sm btn-success ml-2">Change Email</a>
                     <% if (!user.googleId) { %>
                      <a href="/updatePassword" class="btn btn-sm btn-success">Change Password</a>
                    <% } %>
                    <a href="/editProfile" class="btn btn-sm btn-success ml-2">Edit Profile</a>

                   </div>
                 </div>
               </div>


               <div
                 class="tab-pane fade"
                 id="address"
                 role="tabpanel"
                 aria-labelledby="address-tab"
               >
                 <div class="row">
                <%if(userAddress){%>
                  <%userAddress.address.forEach((address)=>{%>
                   <div class="col-lg-6">
                     <div class="card mb-3 mb-lg-0">
                       <div class="card-header">
                         <h5 class="mb-0" style="color: #ddd;"><%=address.addressType%></h5>
                       </div>
                        <div class="card-body">
                         <address>
                        <%=address.name%>   <br/>
                        <%=address.city%>   <br/>
                        <%=address.landMark%>   <br/>
                        <%=address.state%> 
                     
                        
                         </address>
                         <p><%=address.pincode%></p>
                         <p><%=address.phone%></p>
                         <p><%=address.altPhone%></p>
                         <div class="d-flex justify-content-between">
                          <a href="/editAddress?id=<%= address._id %>" class="btn-small">Edit</a>
                          <a href="/deleteAddress?id=<%= address._id %>" class="btn-small" onclick="return confirm('Are you sure you want to delete this address?')">Delete</a>
                          
                         </div>
                        
                       </div>
                     </div>
                   </div>
                   <%})%>
                   <%}else{%>
                
                   <div class="col-lg-6">
                     <div class="card mb-3 mb-lg-0">
                       <div class="card-header">
                         <h5 class="mb-0"></h5>
                       </div>
                       <div class="card-body">
                         <address>No address</address>
                       </div>
                     </div>
                   </div>
                   <%}%>
              
                   <div>
                     <a href="/addAddress">
                       <button class="btn btn-primary w-70">
                         Add address
                       </button>
                     </a>
                   </div>
                 </div>
               </div>


               <div class="tab-pane fade" id="orders" role="tabpanel" aria-labelledby="orders-tab">
                 <div class="card">
                   <div class="card-header">
                     <h5 class="mb-0" style="color: #ddd;">Your Orders</h5>
                   </div>
                   <div class="card-body">
                     <div class="table-responsive">
                       <table class="table">
                         <thead>
                           <tr>
                            <th>Order ID</th>
                            <th>Date</th>
                            <th>Status</th>
                            <th>Total</th>
                            <th>Actions</th>
                           </tr>
                         </thead>
                         <tbody>
                          <% if (orders && Array.isArray(orders) && orders.length > 0) { %>
                            <% orders.forEach((order) => { %>
                              <tr>
                                <td><%= order.orderId %></td>
                                <td><%= order.createdOn ? order.createdOn.toLocaleDateString() : 'N/A' %></td>
                                <td><%= order.status %></td>
                                <td>₹<%= order.finalAmount.toFixed(2) %></td>
                               
                                <td>
                                  <a href="/orderDetails?id=<%= order._id %>" class="btn btn-sm btn-primary">View</a>
                                </td>
                              </tr>
                            <% }) %>
                          <% } else { %>
                            <tr>
                              <td colspan="5" class="text-center">No orders found.</td>
                            </tr>
                          <% } %>
                         </tbody>
                       </table>

                  </div>
                   </div>
                 </div>
               </div>
               <div class="tab-pane fade" id="track-orders" role="tabpanel" aria-labelledby="track-orders-tab">

           <div class="wallet-container">
                  <h2 class="wallet-title">Wallet & Transactions</h2>
                  
                  <div class="balance-section">
                      <div class="balance-card">
                          <p class="amount">₹<span id="availableBalance"><%=wallet.balance.toFixed(2)%></span></p>
                          <p class="label">Available Balance</p>
                      </div>
                  </div>
                  
                  <div class="action-buttons">
                      <button class="action-button" data-bs-toggle="modal" data-bs-target="#addMoneyModal">
                          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-square" viewBox="0 0 16 16">
                              <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z"/>
                              <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4"/>
                          </svg> Add Balance
                      </button>
                      <button class="action-button" data-bs-toggle="modal" data-bs-target="#withdrawModal">
                          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-dash-square" viewBox="0 0 16 16">
                              <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z"/>
                              <path d="M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8"/>
                          </svg> Withdraw
                      </button>
                  </div>
                  
                  <div class="transaction-history">
                    <h3 class="transaction-title">Transaction History</h3>
                    <table class="transaction-table">
                        <thead>
                            <tr>
                                <th>Amount</th>
                                <th>Purpose</th>
                                <th>Date</th>
                                <th>Type</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (transactions.length > 0) { %>
                                <% transactions.forEach(transaction => { %>
                                    <tr>
                                        <td>₹<%= transaction.amount.toFixed(2) %></td>
                                        <td><%= transaction.transactionPurpose %></td>
                                        <td><%= new Date(transaction.createdAt).toLocaleDateString() %></td>
                                        <td>
                                            <% if (transaction.transactionType === 'credit') { %>
                                                <span style="color: green;">Credit</span>
                                            <% } else { %>
                                                <span style="color: red;">Debit</span>
                                            <% } %>
                                        </td>
                                    </tr>
                                <% }); %>
                            <% } else { %>
                                <tr class="empty-transactions">
                                    <td colspan="4">No transactions found</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
                
              <!-- Add Money Modal -->
              <div class="modal fade" id="addMoneyModal" tabindex="-1">
                  <div class="modal-dialog">
                      <div class="modal-content">
                          <div class="modal-header">
                              <h5 class="modal-title">Add Money to Wallet</h5>
                              <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                          </div>
                          <div class="modal-body">
                              <div class="mb-4">
                                  <input type="number" id="amount" class="form-control form-control-lg text-center" placeholder="Enter Amount (₹)" min="1" step="1">
                              </div>
                              <div class="text-center mb-4">
                                  <div class="quick-amount" onclick="setAmount(10000)">₹10,000</div>
                                  <div class="quick-amount" onclick="setAmount(50000)">₹50,000</div>
                                  <div class="quick-amount" onclick="setAmount(100000)">₹100,000</div>
                                  <div class="quick-amount" onclick="setAmount(200000)">₹200,000</div>
                              </div>
                          </div>
                          <div class="modal-footer">
                              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                              <button type="button" class="btn btn-primary" id="payButton">Proceed to Pay</button>
                          </div>
                      </div>
                  </div>
              </div>
              
              <!-- Withdraw Money Modal -->
              <div class="modal fade" id="withdrawModal" tabindex="-1">
                  <div class="modal-dialog">
                      <div class="modal-content">
                          <div class="modal-header">
                              <h5 class="modal-title">Withdraw Money</h5>
                              <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                          </div>
                          <div class="modal-body">
                              <div class="mb-3">
                                  <label for="withdrawAmount" class="form-label">Enter Amount to Withdraw</label>
                                  <input type="number" id="withdrawAmount" class="form-control" min="1" step="1">
                              </div>
                          </div>
                          <div class="modal-footer">
                              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                              <button type="button" class="btn btn-primary" id="withdrawButton">Withdraw</button>
                          </div>
                      </div>
                  </div>
              </div>
                
 </section>
</main>
<%- include("../../views/partials/user/footer") %>



<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>

document.addEventListener('DOMContentLoaded', function() {
    async function updateWalletData() {
        try {
            const response = await fetch('/wallet/get-data', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                },
            });

            const result = await response.json();
            if (result.success) {
                document.getElementById('availableBalance').textContent = result.balance.toFixed(2);

                const tbody = document.querySelector('.transaction-table tbody');
                tbody.innerHTML = ''; 

                if (result.transactions.length > 0) {
                    result.transactions.forEach(transaction => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td>₹${transaction.amount.toFixed(2)}</td>
                            <td>${transaction.transactionPurpose}</td>
                            <td>${new Date(transaction.createdAt).toLocaleDateString()}</td>
                            <td>
                                ${transaction.transactionType === 'credit' ?
                                    '<span style="color: green;">Credit</span>' :
                                    '<span style="color: red;">Debit</span>'}
                            </td>
                        `;
                        tbody.appendChild(row);
                    });
                } else {
                    tbody.innerHTML = '<tr class="empty-transactions"><td colspan="4">No transactions found</td></tr>';
                }
            } else {
                console.error('Failed to fetch wallet data:', result.message);
            }
        } catch (error) {
            console.error('Error fetching wallet data:', error);
        }
    }

    updateWalletData();

    window.addEventListener('focus', updateWalletData);
});


document.addEventListener('DOMContentLoaded', function() {
    async function updateWalletBalance() {
        try {
            const response = await fetch('/wallet/get-balance', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                },
            });

            const result = await response.json();
            if (result.success) {
                document.getElementById('availableBalance').textContent = result.balance.toFixed(2);
            } else {
                console.error('Failed to fetch wallet balance:', result.message);
            }
        } catch (error) {
            console.error('Error fetching wallet balance:', error);
        }
    }

    updateWalletBalance();

    window.addEventListener('focus', updateWalletBalance);
})

function setAmount(amount) {
    document.getElementById('amount').value = amount;
}

document.getElementById('payButton').addEventListener('click', async () => {
    const amount = document.getElementById('amount').value;
    
    if (!amount || amount < 1) {
        alert('Please enter a valid amount');
        return;
    }

    try {
        const response = await fetch('/wallet/create-razorpay-order', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ amount })
        });

        const data = await response.json();
        
        if (!data.success) {
            throw new Error(data.message);
        }

        const options = {
            key: data.key_id,
            amount: data.amount,
            currency: "INR",
            name: "Wallet Recharge",
            description: "Add money to wallet",
            order_id: data.order_id,
            handler: async function (response) {
                try {
                    const verifyResponse = await fetch('/wallet/verify-payment', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(response)
                    });

                    const verifyData = await verifyResponse.json();
                    
                    if (verifyData.success) {
                        Swal.fire({
                            title: 'Success!',
                            text: 'Payment successful! Your wallet has been updated.',
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.reload();
                            }
                        });
                    } else {
                        Swal.fire({
                            title: 'Error!',
                            text: 'Payment verification failed. Please contact support.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                } catch (error) {
                    console.error('Error:', error);
                    Swal.fire({
                        title: 'Error!',
                        text: 'Payment verification failed. Please contact support.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            },
            prefill: {
                name: "<%= user.name %>",
                email: "<%= user.email %>"
            },
            theme: {
                color: "#4a5568"
            }
        };

        const rzp = new Razorpay(options);
        rzp.open();
        
        const modal = bootstrap.Modal.getInstance(document.getElementById('addMoneyModal'));
        modal.hide();
    } catch (error) {
        console.error('Error:', error);
       
    }
});

document.getElementById('withdrawButton').addEventListener('click', async () => {
    const amount = document.getElementById('withdrawAmount').value;
    
    if (!amount || amount < 1) {
        alert('Please enter a valid amount');
        return;
    }

    try {
        const response = await fetch('/wallet/withdraw-money', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ amount })
        });

        const data = await response.json();
        
        if (data.success) {
    Swal.fire({
        title: 'Success!',
        text: 'Money withdrawn successfully!',
        icon: 'success',
        confirmButtonText: 'OK'
    }).then((result) => {
        if (result.isConfirmed) {
            window.location.reload();
        }
    });
} else {
    Swal.fire({
        title: 'Error!',
        text: data.message || 'Failed to withdraw money. Please try again.',
        icon: 'error',
        confirmButtonText: 'OK'
    });
}
    } catch (error) {
        console.error('Error:', error);
        alert('Failed to withdraw money. Please try again.');
    }
});
</script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
