
<%- include("../../views/partials/user/header") %>
<style>
  /* Black and White Color Palette */
:root {
  --primary: #000000;
  --primary-dark: #000000;
  --primary-light: #333333;
  --secondary: #666666;
  --secondary-dark: #444444;
  --accent: #888888;
  --dark: #000000;
  --gray-dark: #333333;
  --gray: #777777;
  --gray-light: #dddddd;
  --light: #ffffff;
  --success: #444444;
  --warning: #999999;
  --border-radius-sm: 4px;
  --border-radius: 8px;
  --border-radius-lg: 12px;
  --box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  --box-shadow-hover: 0 8px 20px rgba(0, 0, 0, 0.15);
  --transition: all 0.3s ease;
}

/* Global Styles & Typography */
body {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
  color: var(--dark);
  background-color: var(--light);
  line-height: 1.6;
}

button, input, select {
  font-family: inherit;
}

/* Main Container */
.main-container {
  max-width: 1280px;
  margin: 0 auto;
  padding: 24px;
}

/* Shop Topbar */
.shop-topbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 32px;
  background-color: white;
  padding: 16px 24px;
  border-radius: var(--border-radius);
  box-shadow: var(--box-shadow);
}

/* Search Bar */
.search-bar {
  width: 300px;
}

.search-form {
  display: flex;
  flex-direction: column;
  align-items: center;
  background-color: white;
  border-radius: var(--border-radius);
  overflow: hidden;
  box-shadow: var(--box-shadow);
  padding: 14px;
  border: 1px solid var(--gray-light);
}

.search-input {
  width: 100%;
  padding: 10px 14px;
  font-size: 15px;
  border: 1px solid var(--gray-light);
  border-radius: var(--border-radius-sm);
  outline: none;
  transition: var(--transition);
}

.search-input:focus {
  border-color: var(--primary);
  box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1);
}

.search-button {
  width: 100%;
  height: 40px;
  margin-top: 12px;
  padding: 8px;
  background-color: var(--primary);
  color: white;
  border: none;
  cursor: pointer;
  font-size: 15px;
  font-weight: 500;
  border-radius: var(--border-radius-sm);
  transition: var(--transition);
}

.search-button:hover {
  background-color: var(--primary-light);
  transform: translateY(-1px);
}

.clear-search-button {
  width: 100%;
  margin-top: 8px;
  padding: 8px;
  background-color: transparent;
  color: var(--gray-dark);
  border: 1px solid var(--gray);
  border-radius: var(--border-radius-sm);
  cursor: pointer;
  text-align: center;
  font-size: 14px;
  transition: var(--transition);
}

.clear-search-button:hover {
  background-color: var(--gray-light);
  color: var(--dark);
}

/* Sidebar */
.sidebar {
  padding: 24px;
  border: none;
  background-color: white;
  border-radius: var(--border-radius);
  margin-bottom: 24px;
  width: 280px;
  height: 500px;
  box-shadow: var(--box-shadow);
}

.filter-section {
  margin-bottom: 24px;
  text-align: left;
}

.filter-title {
  font-weight: 600;
  margin-bottom: 12px;
  font-size: 16px;
  color: var(--dark);
  display: flex;
  align-items: center;
}

.filter-title::before {
  content: "";
  display: inline-block;
  width: 3px;
  height: 18px;
  background-color: var(--primary);
  margin-right: 8px;
  border-radius: 2px;
}

.filter-select {
  width: 100%;
  padding: 10px 12px;
  font-size: 14px;
  border: 1px solid var(--gray-light);
  border-radius: var(--border-radius-sm);
  background-color: white;
  cursor: pointer;
  transition: var(--transition);
  appearance: none;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%23000000' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 12px center;
  padding-right: 36px;
}

.filter-select:hover {
  border-color: var(--primary-light);
}

.filter-select:focus {
  border-color: var(--primary);
  box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1);
  outline: none;
}

.clear-filter {
  display: inline-block;
  margin-top: 10px;
  color: var(--primary);
  font-size: 14px;
  text-decoration: none;
  transition: var(--transition);
  border: 1px solid var(--primary);
  padding: 6px 12px;
  border-radius: var(--border-radius-sm);
  background-color: rgba(0, 0, 0, 0.05);
}

.clear-filter:hover {
  background-color: var(--primary);
  color: white;
}

/* Product List Container */
.product-list-container {
  display: flex;
  gap: 24px;
}

/* Product Grid */
.product-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  gap: 24px;
  width: calc(100% - 304px);
}

/* Product Card */
.product-card {
  border: none;
  border-radius: var(--border-radius);
  overflow: hidden;
  position: relative;
  box-shadow: var(--box-shadow);
  transition: var(--transition);
  background-color: white;
  height: 100%;
  display: flex;
  flex-direction: column;
}

.product-card:hover {
  transform: translateY(-6px);
  box-shadow: var(--box-shadow-hover);
}

.product-image-container {
  position: relative;
  overflow: hidden;
  padding-top: 0;
}

.product-card img {
  width: 100%;
  height: 240px;
  object-fit: cover;
  transition: transform 0.5s ease;
}

.product-card:hover img {
  transform: scale(1.08);
}

/* Wishlist Button */
.wishlist-btn {
  position: absolute;
  top: 12px;
  right: 12px;
  background-color: white;
  color: var(--gray-dark);
  width: 36px;
  height: 36px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  cursor: pointer;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
  z-index: 10;
  font-size: 18px;
  transition: var(--transition);
}

.wishlist-btn:hover {
  transform: scale(1.1);
  background-color: var(--primary);
  color: white;
}

/* Offer Badge */
.corner-offer {
  position: absolute;
  top: 0;
  left: 0;
  overflow: hidden;
  width: 100px;
  height: 100px;
  z-index: 5;
}

.corner-offer::before {
  content: "";
  position: absolute;
  top: -50px;
  left: -50px;
  width: 100px;
  height: 100px;
  background-color: var(--primary);
  transform: rotate(45deg);
  box-shadow: var(--box-shadow);
}

.corner-offer-text {
  position: absolute;
  top: 16px;
  left: -21px;
  transform: rotate(-45deg);
  color: white;
  font-weight: 600;
  font-size: 13px;
  text-align: center;
  width: 100px;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

/* Product Details */
.product-details {
  padding: 16px;
  flex-grow: 1;
  display: flex;
  flex-direction: column;
}

.product-title {
  font-size: 16px;
  font-weight: 500;
  margin: 10px 0 8px;
  color: var(--dark);
  line-height: 1.4;
}

.product-price {
  font-size: 18px;
  font-weight: 600;
  color: var(--dark);
  margin-bottom: 14px;
  display: flex;
  align-items: center;
  gap: 6px;
}

.price-strike {
  font-size: 14px;
  color: var(--gray-dark);
  text-decoration: line-through;
}

/* Add to Cart Button */
.add-to-cart-btn {
  background-color: var(--primary);
  color: white;
  padding: 12px 0;
  border: none;
  border-radius: var(--border-radius-sm);
  cursor: pointer;
  width: 100%;
  font-weight: 500;
  transition: var(--transition);
  margin-top: auto;
  font-size: 15px;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 8px;
}

.add-to-cart-btn:hover {
  background-color: var(--primary-light);
}

.add-to-cart-btn::before {
  content: "";
  display: inline-block;
  width: 18px;
  height: 18px;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 24 24' fill='none' stroke='white' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Ccircle cx='9' cy='21' r='1'%3E%3C/circle%3E%3Ccircle cx='20' cy='21' r='1'%3E%3C/circle%3E%3Cpath d='M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6'%3E%3C/path%3E%3C/svg%3E");
  background-size: contain;
  background-repeat: no-repeat;
}

/* Pagination */
.pagination {
  display: flex;
  justify-content: center;
  gap: 8px;
  margin: 32px 0;
}

.pagination a {
  padding: 10px 16px;
  background-color: white;
  border: 1px solid var(--gray-light);
  color: var(--dark);
  text-decoration: none;
  border-radius: var(--border-radius-sm);
  transition: var(--transition);
  font-weight: 500;
}

.pagination a:hover {
  background-color: var(--gray-light);
}

.pagination .active {
  background-color: var(--primary);
  color: white;
  border-color: var(--primary);
}

/* Modal Styles */
.modal {
  display: none;
  position: fixed;
  z-index: 1000;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.6);
  animation: fadeIn 0.3s ease-out;
  backdrop-filter: blur(3px);
}

.modal-content {
  background-color: white;
  margin: 10% auto;
  padding: 32px;
  width: 450px;
  border-radius: var(--border-radius);
  position: relative;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
  animation: slideUp 0.4s ease;
}

@keyframes slideUp {
  from {
    transform: translateY(50px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.close {
  position: absolute;
  top: 16px;
  right: 20px;
  font-size: 24px;
  color: var(--gray-dark);
  cursor: pointer;
  transition: var(--transition);
  width: 36px;
  height: 36px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
}

.close:hover {
  color: var(--primary);
  background-color: rgba(0, 0, 0, 0.05);
}

.modal-content h3 {
  font-size: 24px;
  font-weight: 600;
  color: var(--dark);
  margin-bottom: 20px;
  text-align: center;
}

#confirmAddToCart {
  width: 100%;
  padding: 14px;
  background-color: var(--primary);
  color: white;
  border: none;
  border-radius: var(--border-radius-sm);
  font-size: 16px;
  font-weight: 500;
  cursor: pointer;
  transition: var(--transition);
  margin-top: 16px;
}

#confirmAddToCart:hover {
  background-color: var(--primary-light);
}

#sizeOptions {
  margin: 24px 0;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 12px;
}

.size-option {
  padding: 12px;
  background-color: var(--light);
  border: 1px solid var(--gray-light);
  border-radius: var(--border-radius-sm);
  cursor: pointer;
  text-align: center;
  transition: var(--transition);
  font-weight: 500;
}

.size-option:hover {
  border-color: var(--primary);
}

.size-option.selected {
  background-color: var(--primary);
  color: white;
  border-color: var(--primary);
}

/* Applied Filters */
.applied-filters-header {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: 8px;
  margin-bottom: 16px;
  padding: 12px 16px;
  background-color: white;
  border-radius: var(--border-radius);
  box-shadow: var(--box-shadow);
}

.filter-tag {
  display: inline-flex;
  align-items: center;
  background-color: var(--primary);
  color: white;
  padding: 6px 12px;
  border-radius: 20px;
  font-size: 14px;
  gap: 6px;
}

/* .filter-tag::after {
  content: "×";
  font-size: 18px;
  font-weight: bold;
  cursor: pointer;
} */

.filter-higlight {
  font-weight: 500;
  color: var(--primary);
}

/* Sort Bar */
.sort-bar {
  width: 250px;
}

.sort-form {
  display: flex;
  align-items: center;
  background-color: white;
  border-radius: var(--border-radius);
  overflow: hidden;
  box-shadow: var(--box-shadow);
  padding: 12px 16px;
}

.clearbutton {
  background-color: var(--gray-dark);
  color: white;
  border: none;
  padding: 8px 16px;
  border-radius: var(--border-radius-sm);
  cursor: pointer;
  transition: var(--transition);
  font-weight: 500;
  font-size: 14px;
}

.clearbutton:hover {
  background-color: var(--primary);
}

/* Responsive Styles */
@media (max-width: 1024px) {
  .product-list-container {
    flex-direction: column;
  }

  .sidebar {
    width: 100%;
    max-width: 100%;
    margin-bottom: 24px;
  }

  .product-grid {
    width: 100%;
    grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
  }
}

@media (max-width: 768px) {
  .main-container {
    padding: 16px;
  }

  .shop-topbar {
    flex-direction: column;
    gap: 16px;
    align-items: stretch;
  }

  .search-form,
  .sort-form {
    max-width: 100%;
    width: 100%;
  }

  .product-grid {
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  }

  .modal-content {
    width: 90%;
    padding: 24px;
  }

  #sizeOptions {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media (max-width: 480px) {
  .product-grid {
    grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));
    gap: 16px;
  }

  .product-card img {
    height: 180px;
  }

  .product-title {
    font-size: 14px;
  }

  .product-price {
    font-size: 16px;
  }

  .add-to-cart-btn {
    padding: 10px 0;
    font-size: 14px;
  }

  .modal-content {
    padding: 20px;
  }

  .modal-content h3 {
    font-size: 20px;
  }

  #sizeOptions {
    grid-template-columns: repeat(2, 1fr);
  }

  .pagination a {
    padding: 8px 12px;
    font-size: 14px;
  }

  .corner-offer {
    width: 80px;
    height: 80px;
  }

  .corner-offer::before {
    width: 80px;
    height: 80px;
  }

  .corner-offer-text {
    font-size: 11px;
    width: 80px;
  }
}
</style>
<div class="main-container">
  <div class="filter-higlight">
    <% if (selectedCategory || selectedPriceRange || selectedColor || searchQuery) { %>
      <h3 class="applied-filters-header" style="font-size: 16px; color: #333; margin-bottom: 20px;">
        Showing results for:
        <% if (searchQuery) { %>
          <span class="filter-tag" style="padding: 3px 8px; background-color: #050505; color: white; border-radius: 12px; margin: 0 5px;">
            Search: <%= searchQuery %>
            <a href="/shop" style="color: white; margin-left: 5px; text-decoration: none; font-size: 12px;">x</a>
          </span>
        <% } %>
        <% if (selectedCategory) { %>
          <span class="filter-tag" style="padding: 3px 8px; background-color: #0c0d0e; color: white; border-radius: 12px; margin: 0 5px;">
            Category: <%= category.find(cat => cat._id.toString() === selectedCategory)?.name || 'Unknown' %>
            <a href="/shop" style="color: white; margin-left: 5px; text-decoration: none; font-size: 12px;">x</a>
          </span>
        <% } %>
        <% if (selectedPriceRange) { %>
          <span class="filter-tag" style="padding: 3px 8px; background-color: #090909; color: white; border-radius: 12px; margin: 0 5px;">
            Price: <%= selectedPriceRange.replace('-', ' to ') %>
            <a href="/shop" style="color: white; margin-left: 5px; text-decoration: none; font-size: 12px;">x</a>
          </span>
        <% } %>
        <% if (selectedColor) { %>
          <span class="filter-tag" style="padding: 3px 8px; background-color: #080808; color: white; border-radius: 12px; margin: 0 5px;">
            Color: <%= selectedColor %>
            <a href="/shop" style="color: white; margin-left: 5px; text-decoration: none; font-size: 12px;">x</a>
          </span>
        <% } %>
      </h3>
    <% } %>
  </div>
  <section class="shop-page container">
    <div class="shop-topbar">
      
      <div class="search-bar">
        <form action="/search" method="POST" class="search-form">
          <input type="text" name="query" placeholder="Search items..." class="search-input" value="<%= searchQuery || '' %>" />
          <input type="hidden" name="sort" value="<%= sort || '' %>">
          <input type="hidden" name="category" value="<%= selectedCategory || '' %>">
          <input type="hidden" name="priceRange" value="<%= selectedPriceRange || '' %>">
          <input type="hidden" name="color" value="<%= selectedColor || '' %>">
          <button type="submit" class="search-button">Search</button>
          <% if (searchQuery) { %>
            <a href="/shop" class="clear-search-button">Clear Search</a>
          <% } %>
        </form>
      </div>
     
     
    </div>

    <div class="product-list-container">
      <aside class="sidebar">
   
        <div class="filter-section">
          <div class="filter-title">Filter by Category</div>
          <form action="/filter" method="GET">
            <select name="category" class="filter-select" onchange="this.form.submit()">
              <option value="">Select Category</option>
              <% for (let i = 0; i < category.length; i++) { %>
                <option value="<%= category[i]._id %>" <%= selectedCategory === category[i]._id.toString() ? 'selected' : '' %>>
                  <%= category[i].name %>
                </option>
              <% } %>
            </select>
            <input type="hidden" name="sort" value="<%= sort || '' %>">
            <input type="hidden" name="priceRange" value="<%= selectedPriceRange || '' %>">
            <input type="hidden" name="color" value="<%= selectedColor || '' %>">
            <input type="hidden" name="query" value="<%= searchQuery || '' %>">
            <% if (selectedCategory) { %>
            <% } %>
          </form>
        </div>

        <div class="filter-section">
          <div class="filter-title">Filter by Price</div>
          <form action="/filter" method="GET">
            <select name="priceRange" class="filter-select" onchange="this.form.submit()">
              <option value="">Select Price Range</option>
              <option value="0-500" <%= selectedPriceRange === '0-500' ? 'selected' : '' %>>Under ₹500</option>
              <option value="500-1000" <%= selectedPriceRange === '500-1000' ? 'selected' : '' %>>₹500 - ₹1000</option>
              <option value="1000-1500" <%= selectedPriceRange === '1000-1500' ? 'selected' : '' %>>₹1000 - ₹1500</option>
              <option value="1500-100000" <%= selectedPriceRange === '1500-100000' ? 'selected' : '' %>>Above ₹1500</option>
            </select>
            <input type="hidden" name="sort" value="<%= sort || '' %>">
            <input type="hidden" name="category" value="<%= selectedCategory || '' %>">
            <input type="hidden" name="color" value="<%= selectedColor || '' %>">
            <input type="hidden" name="query" value="<%= searchQuery || '' %>">
            <% if (selectedPriceRange) { %>
            <% } %>
          </form>
        </div>

        <!-- Color Filter -->
        <div class="filter-section">
          <div class="filter-title">Filter by Color</div>
          <form action="/filter" method="GET">
            <select name="color" class="filter-select" onchange="this.form.submit()">
              <option value="">Select Color</option>
              <option value="Red" <%= selectedColor === 'Red' ? 'selected' : '' %>>Red</option>
              <option value="Blue" <%= selectedColor === 'Blue' ? 'selected' : '' %>>Blue</option>
              <option value="Green" <%= selectedColor === 'Green' ? 'selected' : '' %>>Green</option>
              <option value="Black" <%= selectedColor === 'Black' ? 'selected' : '' %>>Black</option>
              <option value="White" <%= selectedColor === 'White' ? 'selected' : '' %>>White</option>
            </select>
            <input type="hidden" name="sort" value="<%= sort || '' %>">
            <input type="hidden" name="category" value="<%= selectedCategory || '' %>">
            <input type="hidden" name="priceRange" value="<%= selectedPriceRange || '' %>">
            <input type="hidden" name="query" value="<%= searchQuery || '' %>">
            <% if (selectedColor) { %>
            <% } %>
          </form>
        </div>
       <h6>sort:</h6>
        <div class="sort-bar">
          <form action="/shop" method="GET" class="sort-form">
            <select name="sort" class="filter-select" onchange="this.form.submit()">
              <option value="" <%= !sort ? 'selected' : '' %>>Sort by: Default</option>
              <option value="price-low-high" <%= sort === 'price-low-high' ? 'selected' : '' %>>Price: Low to High</option>
              <option value="price-high-low" <%= sort === 'price-high-low' ? 'selected' : '' %>>Price: High to Low</option>
              <option value="name-a-z" <%= sort === 'name-a-z' ? 'selected' : '' %>>Name: A to Z</option>
              <option value="name-z-a" <%= sort === 'name-z-a' ? 'selected' : '' %>>Name: Z to A</option>
            </select>
        
            <input type="hidden" name="category" value="<%= selectedCategory || '' %>">
            <input type="hidden" name="priceRange" value="<%= selectedPriceRange || '' %>">
            <input type="hidden" name="color" value="<%= selectedColor || '' %>">
            <input type="hidden" name="query" value="<%= searchQuery || '' %>">
          </form>
        </div>
      </aside>

      <main class="product-grid">
        <% for (let i = 0; i < products.length; i++) { %>
          <div class="product-card">
            <div class="product-image-container">
              <div class="wishlist-btn" onclick="addToWishList('<%=products[i]._id%>')">
                ❤️
              </div>
              <% if(products[i].salePrice !== products[i].regularPrice) { %>
                <div class="corner-offer">
                  <span class="corner-offer-text">
                    <%= Math.round((1-products[i].salePrice/products[i].regularPrice)*100) %>% OFF
                  </span>
                </div>
              <% } %>
              <a href="/productDetails?id=<%= products[i]._id %>">
                <img src="/Uploads/re-image/<%= products[i].productImage[0] %>" alt="<%= products[i].productName %>" />
              </a>
            </div>
            <div class="product-details">
              <a href="/productDetails?id=<%= products[i]._id %>">
                <h4 class="product-title"><%= products[i].productName %></h4>
                <p class="product-price">
                  ₹<%= products[i].salePrice.toLocaleString('en-IN') %>
                  <% if(products[i].salePrice !== products[i].regularPrice) { %>
                    <span class="price-strike">
                      ₹<%= products[i].regularPrice.toLocaleString('en-IN') %>
                    </span>
                  <% } %>
                </p>
              </a>
              <button class="add-to-cart-btn" onclick="showSizeModal('<%= products[i]._id %>')">
                Add to Cart
              </button>
            </div>
          </div>
        <% } %>


      </main>
      <div id="sizeModal" class="modal">
        <div class="modal-content">
          <span class="close">&times;</span>
          <h3>Select Size</h3>
          <div id="sizeOptions"></div>
          <button id="confirmAddToCart" class="btn btn-primary">Add to Cart</button>
        </div>
      </div>
    </div>
  </section>
</div>

<div class="pagination">
  <% if (currentPage > 1) { %>
    <a class="btn" href="/shop?page=<%= currentPage - 1 %>&sort=<%= sort || '' %>&category=<%= selectedCategory || '' %>&priceRange=<%= selectedPriceRange || '' %>&color=<%= selectedColor || '' %>&query=<%= searchQuery || '' %>">Prev</a>
  <% } %>
  <% for (let i = 1; i <= totalPages; i++) { %>
    <a class="btn <%= currentPage === i ? 'active' : '' %>" href="/shop?page=<%= i %>&sort=<%= sort || '' %>&category=<%= selectedCategory || '' %>&priceRange=<%= selectedPriceRange || '' %>&color=<%= selectedColor || '' %>&query=<%= searchQuery || '' %>"><%= i %></a>
  <% } %>
  <% if (currentPage < totalPages) { %>
    <a class="btn" href="/shop?page=<%= currentPage + 1 %>&sort=<%= sort || '' %>&category=<%= selectedCategory || '' %>&priceRange=<%= selectedPriceRange || '' %>&color=<%= selectedColor || '' %>&query=<%= searchQuery || '' %>">Next</a>
  <% } %>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<%- include("../../views/partials/user/footer") %>

<script>
  let selectedProductId = null;
  let selectedSize = null;

  const modal = document.getElementById('sizeModal');
  const span = document.getElementsByClassName("close")[0];

  span.onclick = function() {
    modal.style.display = "none";
  };

  window.onclick = function(event) {
    if (event.target == modal) {
      modal.style.display = "none";
    }
  };

  function showSizeModal(productId) {
    selectedProductId = productId;

    $.ajax({
      url: `/product-sizes/${productId}`,
      method: "GET",
      success: function(sizes) {
        const sizeOptions = document.getElementById('sizeOptions');
        sizeOptions.innerHTML = '';

        sizes.forEach(size => {
          const button = document.createElement('button');
          button.className = 'size-option-btn';
          button.style = 'margin: 5px; padding: 8px 12px; border: 1px solid #ddd; border-radius: 4px;';
          button.textContent = `${size.size} (${size.quantity})`;
          button.disabled = size.quantity <= 0;

          button.onclick = function() {
            document.querySelectorAll('.size-option-btn').forEach(btn => {
              btn.style.backgroundColor = '';
              btn.style.borderColor = '';
            });

            button.style.backgroundColor = '#46698f';
            button.style.borderColor = '#46698f';
            selectedSize = size.size;
          };

          sizeOptions.appendChild(button);
        });

        modal.style.display = "block";
      },
      error: function() {
        Swal.fire({
          title: "Error",
          text: "Failed to fetch sizes. Please try again.",
          icon: "error",
          confirmButtonColor: "#FF3F6c"
        });
      }
    });
  }

  document.getElementById('confirmAddToCart').onclick = function() {
    if (!selectedSize) {
      Swal.fire({
        title: "Size Required!",
        text: "Please select a size before proceeding.",
        icon: "warning",
        confirmButtonColor: "#ef4444",
        confirmButtonText: "OK"
      });
      return;
    }

    $.ajax({
      url: "/addToCart",
      method: "POST",
      data: {
        productId: selectedProductId,
        selectedSize: selectedSize
      },
      success: function(response) {
        if (response.status === true) {
          Swal.fire({
            title: "Success!",
            text: "Item added to cart successfully.",
            icon: "success",
            confirmButtonColor: "#FF3F6c"
          });
        } else {
          Swal.fire({
            title: "Error",
            text: response.status || "Failed to add item to cart",
            icon: "error",
            confirmButtonColor: "#FF3F6c"
          });
        }
      },
      error: function() {
        Swal.fire({
          title: "Error",
          text: "Something went wrong. Please try again.",
          icon: "error",
          confirmButtonColor: "#FF3F6c"
        });
      }
    });

    modal.style.display = "none";
    selectedSize = null;
    selectedProductId = null;
  };

  function addToWishList(productId) {
    $.ajax({
      url: '/addTowishlist',
      method: 'POST',
      data: { productId: productId },
      success: (response) => {
        if (response.status) {
          Swal.fire({
            title: 'Added To Wishlist',
            text: 'Product has been added to your wishlist',
            icon: 'success',
            timer: 2000,
          });
        } else {
          Swal.fire({
            title: 'Already in Wishlist',
            text: response.message,
            icon: 'warning',
            timer: 2000,
          });
        }
      },
      error: (error) => {
        Swal.fire({
          title: 'Error',
          text: 'There was an error adding the product to your wishlist',
          icon: 'error',
          timer: 2000,
        });
      },
    });
  }
</script>

<script>
 
function updateNavCounts() {
  $.ajax({
    url: '/getNavCounts',
    method: 'GET',
    success: function(response) {
      if(response.status) {
        $('#wishlistCount').text(response.wishlistCount);
        $('#cartCount').text(response.cartCount);
      }
    },
    error: function() {
      console.log('Error fetching nav counts');
    }
  });
}


$(document).ready(function() {
  updateNavCounts();
});


function addToWishList(productId) {
  $.ajax({
    url: '/addTowishlist',
    method: 'POST',
    data: { productId: productId },
    success: (response) => {
      if (response.status) {
      
        $('#wishlistCount').text(response.wishlistCount);
        if(response.cartCount !== undefined) {
          $('#cartCount').text(response.cartCount);
        }
        
        Swal.fire({
          title: 'Added To Wishlist',
          text: 'Product has been added to your wishlist',
          icon: 'success',
          timer: 2000,
        });
      } else {
        Swal.fire({
          title: 'Already in Wishlist',
          text: response.message,
          icon: 'warning',
          timer: 2000,
        });
      }
    },
    error: (error) => {
      Swal.fire({
        title: 'Error',
        text: 'There was an error adding the product to your wishlist',
        icon: 'error',
        timer: 2000,
      });
    },
  });
}


document.getElementById('confirmAddToCart').onclick = function() {
  if (!selectedSize) {
    Swal.fire({
      title: "Size Required!",
      text: "Please select a size before proceeding.",
      icon: "warning",
      confirmButtonColor: "#ef4444",
      confirmButtonText: "OK"
    });
    return;
  }

  $.ajax({
    url: "/addToCart",
    method: "POST",
    data: {
      productId: selectedProductId,
      selectedSize: selectedSize
    },
    success: function(response) {
      if (response.status === true) {
       
        $('#cartCount').text(response.cartLength);
        if(response.wishlistCount !== undefined) {
          $('#wishlistCount').text(response.wishlistCount);
        }
        
        Swal.fire({
          title: "Success!",
          text: "Item added to cart successfully.",
          icon: "success",
          confirmButtonColor: "#FF3F6c"
        });
      } else {
        Swal.fire({
          title: "Error",
          text: response.status || "Failed to add item to cart",
          icon: "error",
          confirmButtonColor: "#FF3F6c"
        });
      }
      modal.style.display = "none";
      selectedSize = null;
      selectedProductId = null;
    },
    error: function() {
      Swal.fire({
        title: "Error",
        text: "Something went wrong. Please try again.",
        icon: "error",
        confirmButtonColor: "#FF3F6c"
      });
    }
  });
};


function removeFromCart(productId) {
  $.ajax({
    url: `/removeFromCart?id=${productId}`,
    method: 'GET',
    success: function(response) {
      if(response.status) {
      
        $('#cartCount').text(response.cartCount);
        if(response.wishlistCount !== undefined) {
          $('#wishlistCount').text(response.wishlistCount);
        }
      
        location.reload(); 
      }
    },
    error: function() {
      console.log('Error removing item from cart');
    }
  });
}
</script>
