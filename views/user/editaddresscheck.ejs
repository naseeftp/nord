<%- include("../../views/partials/user/header") %>
<div class="container mt-5">
    <div class="row">
       <div class="col-md-10 mx-auto">
          <h3 class="mb-4 text-dark">Edit User Address</h3>
          <form id="addressForm" method="POST" action="/editAddresscheck?id=<%= address._id.toLocaleString() %>" class="bg-white p-4">
             <div class="row mb-3">
                <div class="col-md-4 mb-3">
                   <label for="addressType" class="form-label">Address Type</label>
                   <input type="text" class="form-control" value="<%= address.addressType %>" id="addressType" name="addressType" >
                </div>
                <div class="col-md-4 mb-3">
                   <label for="name" class="form-label">Name</label>
                   <input type="text" class="form-control" value="<%= address.name %>" id="name" name="name">
                </div>
                <div class="col-md-4 mb-3">
                   <label for="city" class="form-label">City</label>
                   <input type="text" class="form-control" value="<%= address.city %>" id="city" name="city" >
                </div>
             </div>
             <div class="row mb-3">
                <div class="col-md-4 mb-3">
                   <label for="landMark" class="form-label">Landmark</label>
                   <input type="text" class="form-control" value="<%= address.landMark %>" id="landMark" name="landMark">
                </div>
                <div class="col-md-4 mb-3">
                   <label for="state" class="form-label">State</label>
                   <input type="text" class="form-control" value="<%= address.state %>" id="state" name="state" >
                </div>
                <div class="col-md-4 mb-3">
                   <label for="pincode" class="form-label">Pincode</label>
                   <input type="number" class="form-control" value="<%= address.pincode %>" id="pincode" name="pincode" >
                </div>
             </div>
             <div class="row mb-3">
                <div class="col-md-6 mb-3">
                   <label for="phone" class="form-label">Phone</label>
                   <input type="number" class="form-control" value="<%= address.phone %>" id="phone" name="phone" >
                </div>
                <div class="col-md-6 mb-3">
                   <label for="altPhone" class="form-label">Alternate Phone</label>
                   <input type="number" class="form-control" value="<%= address.altPhone %>" id="altPhone" name="altPhone" >
                </div>
             </div>
             <div class="d-flex justify-content-end mt-4">
                <button type="button" class="btn btn-outline-dark me-2" onclick="window.history.back();">Cancel</button>
                <button type="submit" id="submitButton" class="btn btn-dark">Save Address</button>
             </div>
          </form>
       </div>
    </div>
 </div>

<script>
   document.getElementById('submitButton').addEventListener('click', function (event) {
       if (!validateForm()) {
           event.preventDefault();
       }
   });

function validateForm() {
       let isValid = true;
       const requiredFields = ["addressType", "name", "city", "landMark", "state", "pincode", "phone", "altPhone"];
       requiredFields.forEach(function (field) {
           const input = document.getElementById(field);
           inputValue=input.value.trim();
           errorElement=document.getElementById(field + '-error')
           if (input.value === "") {
              if(!errorElement) {
               const errorMessage="This field is required.";
               const errorDiv=document.createElement('div');
               errorDiv.className="text-danger";
               errorDiv.textContent = errorMessage;
               errorDiv.id=field+'-error';
               input.parentNode.appendChild(errorDiv);
                }
               isValid = false;
           }
           else{

              if(errorElement){
                 errorElement.remove();

              }      

           }
       });
          
       function validateForm() {
    let isValid = true;
    const requiredFields = ["addressType", "name", "city", "landMark", "state", "pincode", "phone", "altPhone"];
    
    for (let field of requiredFields) {
        const input = document.getElementById(field);
        const inputValue = input.value.trim();
        let errorElement = document.getElementById(field + '-error');

        if (inputValue === "") {
            if (!errorElement) {
                const errorMessage = "This field is required.";
                const errorDiv = document.createElement('div');
                errorDiv.className = "text-danger";
                errorDiv.textContent = errorMessage;
                errorDiv.id = field + '-error';
                input.parentNode.appendChild(errorDiv);
            }
            isValid = false;
        } else {
            if (errorElement) {
                errorElement.remove();
            }
        }
    }


    if (!isValid) {
        Swal.fire({
            title: 'Error',
            text: 'Please fill in all required fields before updating.',
            icon: 'error'
        });
        return false;  
    }

   
    const addressType = document.getElementById('addressType').value;
    const name = document.getElementById('name').value;
    const city = document.getElementById('city').value;
    const landMark = document.getElementById('landMark').value;
    const state = document.getElementById('state').value;
    const pincode = document.getElementById('pincode').value;
    const phone = document.getElementById('phone').value;
    const altPhone = document.getElementById('altPhone').value;


    const namePattern = /^[A-Za-z\s]+$/;
    const pincodePattern = /^\d{6}$/;
    const phonePattern = /^\d{10}$/;

    if (!namePattern.test(name)) {
        Swal.fire({
            title: 'Error',
            text: 'Name should contain alphabets only.',
            icon: 'error'
        });
        return false;
    }

    if (!namePattern.test(city)) {
        Swal.fire({
            title: 'Error',
            text: 'City should contain alphabets only.',
            icon: 'error'
        });
        return false;
    }

    if (!namePattern.test(landMark)) {
        Swal.fire({
            title: 'Error',
            text: 'Landmark should contain alphabets only.',
            icon: 'error'
        });
        return false;
    }

    if (!namePattern.test(state)) {
        Swal.fire({
            title: 'Error',
            text: 'State should contain alphabets only.',
            icon: 'error'
        });
        return false;
    }

    if (!pincodePattern.test(pincode)) {
        Swal.fire({
            title: 'Error',
            text: 'Pincode should be a 6-digit number.',
            icon: 'error'
        });
        return false;
    }

    if (!phonePattern.test(phone)) {
        Swal.fire({
            title: 'Error',
            text: 'Phone number should be a 10-digit number.',
            icon: 'error'
        });
        return false;
    }

    if (!phonePattern.test(altPhone)) {
        Swal.fire({
            title: 'Error',
            text: 'Alternate phone number should be a 10-digit number.',
            icon: 'error'
        });
        return false;
    }

    if (phone === altPhone) {
        Swal.fire({
            title: 'Error',
            text: 'Phone number and alternate phone number should be different.',
            icon: 'error'
        });
        return false;
    }

    return true; 
}



          return isValid;
   }
</script>
<%- include("../../views/partials/user/footer") %>
